// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlayerManagement.Data;

#nullable disable

namespace PlayerManagement.Data.PlayerManagementMigrations
{
    [DbContext(typeof(PlayerManagementContext))]
    [Migration("20230506054248_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("SL")
                .HasAnnotation("ProductVersion", "6.0.15");

            modelBuilder.Entity("PlayerManagement.Models.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("LeagueBudget")
                        .HasColumnType("REAL");

                    b.Property<string>("LeagueFoundation")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfTeams")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Leagues", "SL");
                });

            modelBuilder.Entity("PlayerManagement.Models.Play", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerPositionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayerId", "PlayerPositionId");

                    b.HasIndex("PlayerPositionId");

                    b.ToTable("Plays", "SL");
                });

            modelBuilder.Entity("PlayerManagement.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayerPositionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerPositionId");

                    b.HasIndex("TeamId");

                    b.HasIndex("Email", "Phone")
                        .IsUnique();

                    b.ToTable("Players", "SL");
                });

            modelBuilder.Entity("PlayerManagement.Models.PlayerPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayerPos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PlayerPositions", "SL");
                });

            modelBuilder.Entity("PlayerManagement.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LeagueId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Teams", "SL");
                });

            modelBuilder.Entity("PlayerManagement.Models.Play", b =>
                {
                    b.HasOne("PlayerManagement.Models.Player", "Player")
                        .WithMany("PlaysAs")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlayerManagement.Models.PlayerPosition", "PlayerPosition")
                        .WithMany("Plays")
                        .HasForeignKey("PlayerPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("PlayerPosition");
                });

            modelBuilder.Entity("PlayerManagement.Models.Player", b =>
                {
                    b.HasOne("PlayerManagement.Models.PlayerPosition", "PlayerPosition")
                        .WithMany("Players")
                        .HasForeignKey("PlayerPositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlayerManagement.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerPosition");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("PlayerManagement.Models.Team", b =>
                {
                    b.HasOne("PlayerManagement.Models.League", "League")
                        .WithMany("Teams")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("League");
                });

            modelBuilder.Entity("PlayerManagement.Models.League", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("PlayerManagement.Models.Player", b =>
                {
                    b.Navigation("PlaysAs");
                });

            modelBuilder.Entity("PlayerManagement.Models.PlayerPosition", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("Plays");
                });

            modelBuilder.Entity("PlayerManagement.Models.Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
