@model PlayerManagement.Models.News

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>
<h2>News: #@Model.Id</h2>
<hr />
<div>

    @{
        if (Model.NewsPhoto?.Content != null)
        {
            @:<div>
                string imageBase64 = Convert.ToBase64String(Model.NewsPhoto.Content);
                string imageSrc = string.Format("data:" + Model.NewsPhoto.MimeType + ";base64,{0}", imageBase64);
                <img src="@imageSrc" alt="Picture of @Model.Title news" title="Picture of @Model.Title news" class="img-fluid rounded" />
            @:</div><hr />
        }
    }
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.AuthorFirstName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.AuthorFirstName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.AuthorLastName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.AuthorLastName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Date)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Date)
        </dd>
@*         <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ImageUrl)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ImageUrl)
        </dd> *@
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Content)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Content)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>