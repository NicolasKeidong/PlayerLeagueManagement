 @model IEnumerable<PlayerManagement.Models.Player>

@{
    ViewData["Title"] = "Index";
}

<h1>Player Index</h1>

<p>
    <a asp-action="Create">Create New</a>
    <a asp-action="DownloadPlayers" class="btn btn-info float-end">Download Players Report</a>
</p>
<form asp-action="Index" method="get">
    <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />
    <div class="form-horizontal">
        <button class="btn @(ViewData["Filtering"])" type="button" data-bs-toggle="collapse" id="filterToggle" data-bs-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
            Filter/Search
        </button>
        <div class="collapse" id="collapseFilter">
            <div class="card card-body bg-light">
        <div class="row">
            <div class="form-group col-md-4">
                <label class="control-label">Select by Team:</label>
                @Html.DropDownList("TeamId", null, "All Teams", htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="form-group col-md-4">
                <label class="control-label">Filter by Player Position:</label>
                @Html.DropDownList("PlayerPositionId", null, "None", htmlAttributes: new { @class = "form-control" })
            </div>
            <div class="form-group col-md-4">
                <label class="control-label">Search Player Name:</label>
                @Html.TextBox("SearchString", null, new { @class = "form-control" })
            </div>
            <div class="form-group col-md-4 align-self-end">
                <input type="submit" name="actionButton" value="Filter" class="btn btn-outline-primary" />
                <a asp-action="Index" class="btn btn-outline-dark">Clear</a>
            </div>
            </div>
            </div>
        </div>
    </div>
    <br />
    <div class="container-fluid d-block d-md-none">
        <div class="row">
            @foreach (var item in Model)
            {
                <div class="card mb-sm-3" style="min-width: 18rem;">
                    <h5 class="card-header"><strong>@Html.DisplayFor(modelItem => item.FullName)</strong></h5>
                    <div class="card-body">
                        <figure class="row">
                            <p class="col-auto">
                                @{
                                    if (item.PlayerThumbnail?.Content != null)
                                    {
                                        string imageBase64 = Convert.ToBase64String(item.PlayerThumbnail.Content);
                                        string imageSrc = string.Format("data:" + item.PlayerThumbnail.MimeType + ";base64,{0}", imageBase64);
                                        <img src="@imageSrc" alt="Profile Picture of @item.FullName" title="Profile Picture of @item.FullName" style="max-height: 80px; max-width: 96px" class="img-fluid rounded" />
                                    }
                                    else
                                    {
                                        <img src="~/images/blankProfile.jpg" style="max-height: 80px; max-width: 96px" class="img-fluid rounded" />
                                    }
                                }
                            </p>
                            <figcaption class="col">
                                <p class="card-text">
                                    @*Card Text goes Here*@
                                    <dl class="row lh-1">
                                        <dt class="col-3 text-truncate">
                                            @Html.DisplayNameFor(model => model.Age)
                                        </dt>
                                        <dd class="col-9">
                                            @Html.DisplayFor(modelItem => item.Age)
                                        </dd>
                                        <dt class="col-3 text-truncate">
                                            @Html.DisplayNameFor(model => model.FullName)
                                        </dt>
                                        <dd class="col-9">
                                            @Html.DisplayFor(modelItem => item.FullName)
                                        </dd>
                                        <dt class="col-3 text-truncate">
                                            @Html.DisplayNameFor(model => model.Team)
                                        </dt>
                                        <dd class="col-9">
                                            @Html.DisplayFor(modelItem => item.Team.Name)
                                        </dd>
                                        <dt class="col-3 text-truncate">
                                            @Html.DisplayNameFor(model => item.PlayerPosition)
                                        </dt>
                                        <dd class="col-9">
                                            Primary: @Html.DisplayFor(modelItem => item.PlayerPosition.PlayerPos)<br />
                                            @{
                                                int playCount = item.Plays.Count;
                                                if (playCount > 0)
                                                {
                                                    string firstPlay = item.Plays.FirstOrDefault().PlayerPosition.PlayerPos;
                                                    if (playCount > 1)
                                                    {
                                                        string playList = "";
                                                        var c = item.Plays.ToList();
                                                        for (int i = 1; i < playCount; i++)//Skip the first because we have it already
                                                        {
                                                            playList += c[i].PlayerPosition.PlayerPos + " <br />";
                                                        }
                                                        <a class="" role="button" data-bs-toggle="collapse" href="#collapseOther@(item.Id)"
                                                           aria-expanded="false" aria-controls="collapseOther@(item.Id)">
                                                            @firstPlay <span class="badge bg-info">@playCount</span>
                                                        </a>
                                                        <div class="collapse" id="collapseOther@(item.Id)">
                                                            @Html.Raw(playList)
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        @firstPlay
                                                    }
                                                }
                                            }
                                        </dd>
                                    </dl>
                                </p>
                            </figcaption>
                        </figure>
                        <div class="card-footer">
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="d-none d-md-block">
<table class="table">
    <thead>
        <tr>
            <th></th>
            <th>
                <input type="submit" name="actionButton" value="Player" class="btn btn-link" />
            </th>
            <th>
                <input type="submit" name="actionButton" value="Email" class="btn btn-link" />
            </th>
            <th>
                <input type="submit" disabled="disabled" value="Player Position" class="btn btn-link" />
            </th>
            <th>
                <input type="submit" name="actionButton" value="Team" class="btn btn-link" />
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                    @{
                        if (item.PlayerThumbnail?.Content != null)
                        {
                            string imageBase64 = Convert.ToBase64String(item.PlayerThumbnail.Content);
                            string imageSrc = string.Format("data:" + item.PlayerThumbnail.MimeType + ";base64,{0}", imageBase64);
                                <img src="@imageSrc" alt="Profile Picture of @item.FullName" title="Profile Picture of @item.FullName" class="img-fluid rounded" />
                        }
                        else
                        {
                            <img src="~/images/blankProfile.jpg" style="max-height: 80px; max-width: 96px" class="img-fluid rounded" />
                        }
                    }
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                        Primary: @Html.DisplayFor(modelItem => item.PlayerPosition.PlayerPos)<br />
                            @{
                            int playCount = item.Plays.Count;
                            if (playCount > 0)
                            {
                                string firstPlay = item.Plays.FirstOrDefault().PlayerPosition.PlayerPos;
                                if (playCount > 1)
                                {
                                    string playList = "";
                                    var c = item.Plays.ToList();
                                    for (int i = 1; i < playCount; i++)//Skip the first because we have it already
                                    {
                                        playList += c[i].PlayerPosition.PlayerPos + " <br />";
                                    }
                                    <a class="" role="button" data-bs-toggle="collapse" href="#collapseOther@(item.Id)"
                           aria-expanded="false" aria-controls="collapseOther@(item.Id)">
                                        @firstPlay <span class="badge bg-info">@playCount</span>
                                    </a>
                                    <div class="collapse" id="collapseOther@(item.Id)">
                                        @Html.Raw(playList)
                                    </div>
                                }
                                else
                                {
                                    @firstPlay
                                }
                            }
                        }
                    </td>
            <td>
                @Html.DisplayFor(modelItem => item.Team.Name)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
</div>
<partial name="_PagingNavBar"/>
</form>
